id: getFees
type: datasource
subtype: RESTQuery
resourceName: REST-WithoutResource
template:
  ordered:
    - queryRefreshTime: ''
    - paginationLimit: ''
    - body: ''
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - resourceNameOverride: ''
    - runWhenModelUpdates: true
    - paginationPaginationField: ''
    - headers: >-
        [{"key":"Authorization","value":"Basic
        dXNlcnByb2ZpbGVhZG1pbjpoYXNoZWRfcGFzc3dvcmQ="}]
    - showFailureToaster: true
    - paginationEnabled: false
    - query: >-
        https://intapi-{{retoolContext.environment === "NP02" ? "np02" :
        "np06"}}.dv.yapstone.com/user-profile/api/v1/search/{{timeSensitivityChoiceAD.value==="fourChoice"
        ? selectEntityAD.value.toLowerCase():(timeSensitivityChoiceAD.value
        ==="specificChoice"?selectEntityADSpecific.value.toLowerCase()
        :selectEntityADNotSens.value.toLowerCase())}}/{{timeSensitivityChoiceAD.value==="fourChoice"?
        transidTextAD.value:(timeSensitivityChoiceAD.value
        ==="specificChoice"?transidTextSpecificAD.value
        :transidTextADNotSens.value)}}/fees
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - isImported: false
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - cookies: ''
    - metadata: null
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - paginationDataField: ''
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: true
    - showUpdateSetValueDynamicallyToggle: true
    - runWhenPageLoads: false
    - transformer: |-
        const query_array = [];
        for(let i = 0; i < data.items.length; i++) {
          const id = data.items[i].id;
          const name = data.items[i].name;
          query_array.push({id, name});
        }
        return query_array;
    - events: []
    - queryTimeout: '10000'
    - requireConfirmation: false
    - type: GET
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - bodyType: json
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2022-07-06T20:00:03.319Z
