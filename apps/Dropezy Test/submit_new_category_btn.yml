id: submit_new_category_btn
type: widget
subtype: ButtonWidget2
template:
  ordered:
    - horizontalAlign: stretch
    - clickable: false
    - iconAfter: ''
    - submitTargetId: form1
    - hidden: false
    - text: Submit
    - showInEditor: false
    - tooltipText: ''
    - submit: false
    - iconBefore: ''
    - events:
        - ordered:
            - method: run
            - enabled: ''
            - params:
                ordered:
                  - src: >+
                      //Don't change this button type to submit otherwise the
                      upload query won't work 


                      if(cat_name_eng_tv.value === ""){
                        text14.setHidden(false);
                      }else if (cat_name_id_tv.value.value === ""){
                        text13.setHidden(false);
                      }else if (newCategoryFileDropzone.value.length == 0){
                        text15.setHidden(false);
                      }else if (abbreviation_tv.value == ""){
                        abbreviation_error_tv.setHidden(false);
                        abbreviation_error_tv.setValue("This field is required");
                      }else if (newCategory.child_categories.length == 0){
                        must_have_subcategory_tv.setHidden(false);
                      }else{
                        
                       
                        
                        
                        text14.setHidden(true);
                        text13.setHidden(true);
                        text15.setHidden(true);
                        
                          submit_new_category_btn.setDisabled(true); 
                        
                        
                        
                        
                        
                        checkForAbbreviationQuery.trigger({
                           onSuccess: function (data) {
                              
                             console.log("success check");
                             console.log(data);
                             
                             
                            if( data && Object.keys(data).length === 0 && Object.getPrototypeOf(data) === Object.prototype){
                                console.log("empty results");
                              
                                  uploadChildCategoryImages(0)
                            

                            }else{
                              console.log("found something");
                              
                              abbreviation_error_tv.setHidden(false);
                              abbreviation_error_tv.setValue("This abbreviation is already taken. Please enter a different one");
                              
                              submit_new_category_btn.setDisabled(false); 

                            }
                             
                           },
                          onFailure: function (error) {
                            console.log("success check");
                             console.log(error);
                          },
                        });
                        
                         
                        

                        
                       
                        

                       
                        



                      }




                      function uploadChildCategoryImages(i){
                        
                        if(i == newCategory.child_categories.length){
                          uploadCategory();
                        }
                        
                        var child_category = newCategory.child_categories[i];
                        var fileNameSub = child_category.fileName;
                        var file = child_category.file;
                        
                        
                        uploadSubCategoryImageQuery.trigger({
                         additionalScope: {fileName: fileNameSub, file : file },  
                          onSuccess: function (data) {
                            console.log("success query "+i);
                            console.log(data);
                              
                                delete newCategory.child_categories[i].fileName;
                                delete newCategory.child_categories[i].file;
                            
                            uploadChildCategoryImages(i +1);
                           },
                          onFailure: function (error) {
                            console.log("error query "+i);
                            // Update the Errors text
                               console.log(error);
                            
                             submit_new_category_btn.setDisabled(false); 
                            
                          },
                        });
                      }


                      function uploadCategory(){
                        var fileName = cat_name_eng_tv.value;
                          var ext = newCategoryFileDropzone.files[0].name.split('.').pop();

                          fileName = fileName.replace(/\s/g, '')+"."+ext;
                        
                        console.log("filename: "+fileName);


                          uploadCategoryImageQuery.trigger({
                             additionalScope: {fileName: fileName },  
                              onSuccess: function (data) {
                                console.log("success query ");
                                console.log(data);
                                submit_new_category_btn.setDisabled(false); 
                                
                               
                                triggerCreateNewCategory(fileName);
                              
                               },
                              onFailure: function (error) {
                                console.log("error query ");
                                // Update the Errors text
                                   console.log(error);

                                 submit_new_category_btn.setDisabled(false); 
                              },
                            });
                      }


                      function triggerCreateNewCategory(categoryFileName){

                        createNewCategoryQuery.trigger({
                                     additionalScope: { image_url: categoryFileName},  
                                      onSuccess: function (data) {
                                        console.log("success query ");
                                        console.log(data);
                                        
                                        cat_name_eng_tv.clearValue();
                                        cat_name_id_tv.clearValue();
                                        newCategoryFileDropzone.clearValue();
                                        
                                        
                                        
                                        newCategory = {};
                                        child_categories = []
                                        newCategory.child_categories = child_categories;

                                        new_subcategories_table.setData(newCategory.child_categories);

                                        
                                       },
                                      onFailure: function (error) {
                                        console.log("error query ");
                                        // Update the Errors text
                                           console.log(error);
                                        
                                            submit_new_category_btn.setDisabled(true); 


                                       },
                                    });
                      }

            - targetId: null
            - pluginId: ''
            - waitType: debounce
            - event: click
            - type: script
            - waitMs: '0'
    - loading: ''
    - loaderPosition: auto
    - disabled: false
    - maintainSpaceWhenHidden: false
style:
  ordered: []
position2:
  position2:
    container: form1
    rowGroup: footer
    row: 1.6
    col: 10
    height: 1
    width: 2
createdAt: 2022-06-02T14:34:12.415Z
