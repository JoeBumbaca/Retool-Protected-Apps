id: getLedgerQuery
type: datasource
subtype: RESTQuery
resourceName: 45be196c-58f0-4819-b650-5c48826d4aac
template:
  ordered:
    - queryRefreshTime: ''
    - paginationLimit: ''
    - body: '[{"key":"objectType","value":""}]'
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - resourceNameOverride: ''
    - runWhenModelUpdates: true
    - paginationPaginationField: ''
    - headers: '[{"key":"Bearer","value":"OAUTH2_TOKEN"}]'
    - showFailureToaster: true
    - paginationEnabled: false
    - query: >-
        ?processingNumber={{queryProcessingNumber}}&customerOrderNumber={{queryCustomerOrderNumber}}
    - playgroundQueryUuid: a9bc55fd-dc2a-42f8-86cd-1a79054b9eb1
    - playgroundQueryId: 51
    - error: null
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - retoolVersion: 2.105.1
    - importedQueryInputs:
        ordered:
          - queryProcessingNumber: '{{urlProcessingNumber.value}}'
          - queryCustomerOrderNumber: '{{urlCustomerOrderNumber.value}}'
    - isImported: true
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - requestSentTimestamp: null
    - cookies: '[{"key":"","value":""},{"key":"","value":""}]'
    - metadata: null
    - queryRunTime: null
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - paginationDataField: ''
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - runWhenPageLoads: true
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events: []
    - queryTimeout: '10000'
    - requireConfirmation: false
    - type: GET
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - bodyType: json
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2023-02-06T18:26:01.532Z
