id: query_get_retool_logs
type: datasource
subtype: SqlQueryUnified
resourceName: 848e06e1-a8ba-40dc-a365-85589f7db961
template:
  ordered:
    - queryRefreshTime: ''
    - records: ''
    - lastReceivedFromResourceAt: null
    - databasePasswordOverride: ''
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: true
    - workflowRunId: null
    - showFailureToaster: true
    - query: >-
        select ate."createdAt", u."firstName", u."lastName", u.email,
        ate."metadata" ->> 'status' as Status, ate."metadata" ->> 'error' as
        Error, ate."metadata" -> 'request' ->> 'body' as Body

        from audit_trail_events ate 
          inner join users u on ate."userId" = u.id 
        where 
          ate."pageName" = {{pageName}} and
          ate."queryName" = {{queryName}} and
          ate."actionType" = 'QUERY_RUN'
          and ate."metadata" -> 'request' ->> 'url' = {{url}}
        order by ate."createdAt" desc
    - playgroundQueryUuid: 12ee8f2d-2872-4443-8e2d-8cbc66d3ee15
    - playgroundQueryId: 50
    - error: null
    - workflowRunBodyType: raw
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - warningCodes: []
    - data: null
    - recordId: ''
    - importedQueryInputs:
        ordered:
          - pageName: OTT - Match - Edit
          - queryName: updateProduct
          - url: https://watch.onefootball.com/admin/v1/products/{{urlparams.sku}}
    - isImported: true
    - showSuccessToaster: true
    - dataArray: []
    - cacheKeyTtl: ''
    - filterBy: ''
    - requestSentTimestamp: null
    - databaseHostOverride: ''
    - metadata: null
    - workflowActionType: null
    - editorMode: sql
    - queryRunTime: null
    - actionType: ''
    - changesetObject: ''
    - shouldUseLegacySql: false
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - databaseNameOverride: ''
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - enableBulkUpdates: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - bulkUpdatePrimaryKey: ''
    - playgroundQueryName: Retool - Get Audit Logs
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events: []
    - tableName: ''
    - queryTimeout: '10000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - workflowBlockPluginId: null
    - databaseUsernameOverride: ''
    - shouldEnableBatchQuerying: false
    - doNotThrowOnNoOp: false
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2023-02-03T16:38:03.239Z
