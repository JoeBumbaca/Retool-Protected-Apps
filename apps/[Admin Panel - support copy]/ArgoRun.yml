id: ArgoRun
type: datasource
subtype: GraphQLQuery
resourceName: GraphQL-WithoutResource
template:
  ordered:
    - queryRefreshTime: ''
    - paginationLimit: ''
    - body: >
        mutation($specific_step: String, $run_from: String,$specific_objects:
        [String],$override_tags: [String], $schema_revision: String) {
          argo_run(workflow_type: "argovisor", specific_step: $specific_step, run_from: $run_from, specific_objects: $specific_objects, override_tags: $override_tags, schema_revision: $schema_revision) {
            msg
          }
        }
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: '{{ArgoRun.data.argo_run.msg}}'
    - queryDisabled: '{{!IsStaffRole.data}}'
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - paginationPaginationField: ''
    - headers: >-
        [{"key":"authorization","value":"Bearer
        {{tokenInput.value}}"},{"key":"x-role","value":"{{role.value}}"},{"key":"x-tenant-id","value":"{{
        runTinyTenantCheckbox.value ? TinyTenant.value :
        tenantIdPicker.value}}"}]
    - showFailureToaster: true
    - paginationEnabled: false
    - query: https://api.{{stamp.value}}.sightfull.com/v1/graphql
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - isImported: false
    - graphQLVariables: >-
        [{"key":"specific_step","value":"{{stepModeSwitch.value == \"Step\" ?
        stepSelector.value :
        specificObjectsTo.value}}"},{"key":"run_from","value":"{{stepModeSwitch.value
        == \"From\" ? stepSelector.value :
        undefined}}"},{"key":"specific_objects","value":"{{specificObjectsTo.value
        ? specificObjectNames.value.split(\"\\n\").filter(o=>o!=\"\") :
        []}}"},{"key":"override_tags","value":"{{[
        RunDb2graphOverrideImageTag,RunBabelfishOverrideImageTag,RunTailorOverrideImageTag,RunValidatorOverrideImageTag].filter(x=>(x.value!=\"\")).map(o=>`${o.label}=${o.value}`)}}"},{"key":"schema_revision","value":"{{OverrideSchemaRevision.value
        ? OverrideSchemaRevision.value : undefined}}"}]
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - requestSentTimestamp: null
    - cookies: ''
    - metadata: null
    - queryRunTime: null
    - changesetObject: ''
    - errorTransformer: >-
        //Use the variables data, metadata, and errors to reference these fields
        from your query's results

        if (Array.isArray(errors) && errors.length > 0) {
          return errors[0].message;
        } else {
          return false
        }
            
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - graphQLErrors: null
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - paginationDataField: ''
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - runWhenPageLoads: false
    - transformer: ''
    - events:
        - ordered:
            - event: success
            - type: datasource
            - method: trigger
            - pluginId: ArgoList
            - params:
                ordered: []
            - waitType: debounce
            - waitMs: '0'
        - ordered:
            - event: success
            - type: util
            - method: showNotification
            - pluginId: ''
            - params:
                ordered:
                  - options:
                      ordered:
                        - notificationType: info
                        - title: '{{ self.data.argoRun.msg }}'
            - waitType: debounce
            - waitMs: '0'
        - ordered:
            - event: success
            - type: widget
            - method: close
            - pluginId: newWorkflowModal
            - params:
                ordered: []
            - waitType: debounce
            - waitMs: '0'
        - ordered:
            - event: success
            - type: widget
            - method: clear
            - pluginId: JobRunAdvancedForm
            - params:
                ordered: []
            - waitType: debounce
            - waitMs: '0'
        - ordered:
            - event: success
            - type: datasource
            - method: trigger
            - pluginId: TinyTenantArgoList
            - targetId: null
            - params:
                ordered: []
            - waitType: debounce
            - waitMs: '0'
    - queryTimeout: '10000'
    - workflowId: null
    - requireConfirmation: true
    - type: POST
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - bodyType: raw
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2021-10-28T18:37:41.448Z
folder: Jobs
