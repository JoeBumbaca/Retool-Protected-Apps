id: CreateUser
type: datasource
subtype: GraphQLQuery
resourceName: GraphQL-WithoutResource
template:
  ordered:
    - queryRefreshTime: ''
    - paginationLimit: ''
    - body: >-
        mutation manual_argo($email: String, $first_name: String, $last_name:
        String) {
          insert_users_one(object: {email: $email, last_name: $last_name, first_name: $first_name, feed: { data: {} }}, on_conflict: {constraint: users_tid_email_key, update_columns: email}) {
            id
          }
        }
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: '{{ TenantNotSelected.data || TenantNotSelected.data == null}}'
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - paginationPaginationField: ''
    - headers: >-
        [{"key":"authorization","value":"Bearer
        {{tokenInput.value}}"},{"key":"x-role","value":"{{role.value}}"},{"key":"x-tenant-id","value":"{{tenantIdPicker.value}}"}]
    - showFailureToaster: true
    - paginationEnabled: false
    - query: https://api.{{stamp.value}}.sightfull.com/v1/graphql
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - isImported: false
    - graphQLVariables: >-
        [{"key":"email","value":"{{(usersEmailTable.recordUpdates[0]||usersEmailTable.newRow)?.email}}"},{"key":"first_name","value":"{{(usersEmailTable.recordUpdates[0]||usersEmailTable.newRow)?.name?.split('
        ')[0]}}"},{"key":"last_name","value":"{{(usersEmailTable.recordUpdates[0]||usersEmailTable.newRow)?.name?.split('
        ').slice(1).join(' ')}}"}]
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - requestSentTimestamp: null
    - cookies: ''
    - metadata: null
    - queryRunTime: null
    - changesetObject: ''
    - errorTransformer: >-
        //Use the variables data, metadata, and errors to reference these fields
        from your query's results

        if (Array.isArray(errors) && errors.length > 0) {
          return errors[0].message;
        } else {
          return false
        }
            
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - graphQLErrors: null
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - paginationDataField: ''
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - runWhenPageLoads: false
    - transformer: ''
    - events: []
    - queryTimeout: '10000'
    - workflowId: null
    - requireConfirmation: false
    - type: POST
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - bodyType: raw
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: '6'
createdAt: 2023-01-16T15:27:14.172Z
folder: Users
