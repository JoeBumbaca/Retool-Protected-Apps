id: load_Config
type: datasource
subtype: S3Query
resourceName: 3f8076d7-f465-4c3b-92de-9d6b7551c3a0
template:
  ordered:
    - queryRefreshTime: ''
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - fileKey: '{{''explore-now.com/treatments/default.config.json''}}'
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - resourceNameOverride: ''
    - runWhenModelUpdates: true
    - showFailureToaster: true
    - delimiter: ''
    - query: ''
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - tagSet: ''
    - uploadFileName: '{{select_domain.value}}/{{select_treatments_2.value + ''/config.json''}}'
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - data: null
    - uploadData: |-
        {
        adAnnotations:{{checkboxGroup_adAnnotations.value}}, 
        adExtensions:{{checkboxGroup_adExtensions.value}},
        miscellaneous:{{checkboxGroup_miscellaneous.value}}
        }
    - importedQueryInputs:
        ordered: []
    - isImported: false
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - metadata: null
    - actionType: read
    - copySource: ''
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - confirmationMessage: null
    - isFetching: false
    - prefix: ''
    - changeset: ''
    - rawData: null
    - signedOperationOptions: ''
    - queryTriggerDelay: '0'
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - bucketName: ia-sites
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - signedOperationName: ''
    - enableTransformer: true
    - showUpdateSetValueDynamicallyToggle: true
    - uploadFileType: json
    - maxKeys: ''
    - useRawUploadFileType: false
    - runWhenPageLoads: true
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data.Body;
    - events: []
    - queryTimeout: '10000'
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2022-01-31T19:41:09.344Z
